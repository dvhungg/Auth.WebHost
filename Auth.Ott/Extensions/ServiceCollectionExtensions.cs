using Auth.Ott.Abstractions.Interfaces;
using Auth.Ott.Abstractions.Models;
using Auth.Ott.Options;
using Auth.Ott.Services;
using Microsoft.Extensions.DependencyInjection;

namespace Auth.Ott.Extensions;

/// <summary>
/// Extension methods to add one-time access token authentication scheme to MVC pipeline.
/// </summary>
/// <autogeneratedoc />
public static class ServiceCollectionExtensions
{
    /// <summary>
    /// Adds an authentication scheme to handle one-time tokens.
    /// </summary>
    /// <param name="services">The services to act on.</param>
    /// <param name="configureOptions">Action used to configure one time token options.</param>
    public static IServiceCollection AddOneTimeTokenAuthentication(this IServiceCollection services, Action<OneTimeTokenOptions> configureOptions = null)
    {
        if (configureOptions != null)
            services.Configure(configureOptions);
        return services.AddOneTimeTokenAuthentication(OneTimeTokenDefaults.AuthenticationScheme);
    }

    /// <summary>
    /// Adds an authentication scheme to handle one-time tokens.
    /// </summary>
    /// <param name="services">The services to act on.</param>
    /// <param name="authenticationScheme">The name of the authentication scheme to add.</param>
    public static IServiceCollection AddOneTimeTokenAuthentication(this IServiceCollection services, string authenticationScheme)
    {
        services.AddSingleton<IOneTimeTokenService, OneTimeTokenService>();

        //services.AddAuthorization();
        services.AddAuthentication()
            .AddScheme<OneTimeTokenOptions, OneTimeTokenHandler>(authenticationScheme, _ => { });

        return services;
    }
}
